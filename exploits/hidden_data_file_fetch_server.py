import socket
import subprocess
import asyncio
import os

# Define the host and port to listen on
host = '0.0.0.0'  # Listen on all available network interfaces
port = 12345  # Choose a port number
def receive_file():
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind(('0.0.0.0', 12345))  # Replace with your desired host and port
    server_socket.listen(1)

    print("Waiting for a connection...")
    client_socket, client_address = server_socket.accept()

    with open('received_files/output.csv', 'wb') as f:
        while True:
            data = client_socket.recv(1024)
            if not data:
                break
            f.write(data)

    client_socket.close()
    server_socket.close()
receive_file()

# Create a socket to listen for incoming connections
# server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# server_socket.bind((host, port))
# server_socket.listen(1)  # Listen for up to 5 incoming connections

# print(f"Listening for connections on {host}:{port}")

# Accept incoming connections
# client_socket, client_address = server_socket.accept()
# print(f"Accepted connection from {client_address}")
# with open('hidden_data.csv','a') as file:
#     while True:
#         # Receive data from the client
#         # comand=input('command:')
#         # client_socket.send(comand.encode())
#         # if comand=='exit':
#         #         break 
#         received_data = client_socket.recv(1024).decode()
#         file.write(received_data)
#         # print(received_data)


#     client_socket.close()
#     server_socket.close()
